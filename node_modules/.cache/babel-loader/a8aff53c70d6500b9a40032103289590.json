{"ast":null,"code":"var _jsxFileName = \"/Users/I327713/Documents/React/Practice_Applications/ReactApps/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport { Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faEnvelope, faMapMarkedAlt, faPhoneAlt, faSpaghettiMonsterFlying, faUnlockKeyhole, faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { fetchUser } from '../services/UserServices';\nimport * as actions from '../state/ActionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USERTITLE = {\n  \"name\": \"Hi, My name is\",\n  \"email\": \"My email address is\",\n  \"DOB\": \"My birthday is\",\n  \"address\": \"My address is\",\n  \"phone\": \"My phone number is\",\n  \"password\": \"My password is\"\n};\nconst USERICON = {\n  \"name\": faUserAlt,\n  \"email\": faEnvelope,\n  \"DOB\": faCalendarAlt,\n  \"address\": faMapMarkedAlt,\n  \"phone\": faPhoneAlt,\n  \"password\": faUnlockKeyhole\n};\nconst KEYS = [\"name\", \"email\", \"DOB\", \"address\", \"phone\", \"password\"];\nconst hovered = false;\n\nconst Contact = props => {\n  _s();\n\n  const user = useSelector(store => store);\n  console.log(\"user..\", user);\n  const dispatch = useDispatch();\n\n  function onHover(hoveredItem) {//  console.log(user);\n    // let UserInfo = \"\";\n    // setInfo(UserInfo);\n    // setTitle(USERTITLE[hoveredItem]);\n    // setHovered(hoveredItem);\n  }\n\n  useEffect(() => {\n    console.log(\"use Effect\");\n    fetchUser().then(payload => dispatch({\n      type: actions.FETCH_USERDATA,\n      payload: payload\n    })).catch(e => console.log(\"Error in fetching user data\", e));\n    console.log(\"use effect after dispatch\", user);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"rel crd\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pic hcenter\",\n            src: user.imgUrl,\n            style: {\n              visibility: user.imgUrl ? \"visible\" : \"hidden\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: user.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: user.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"iconlist \",\n              children: KEYS.map(k => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: (k === \"email\" ? \"d-none d-sm-block \" : \"\") + 'm-1 m-sm-1 m-md-3  m-lg-4',\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: hovered === k ? \"active ease\" : \"ease\",\n                    onMouseEnter: () => onHover(k),\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"icon mid \",\n                      icon: USERICON[k]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"iconb mid \",\n                      icon: USERICON[k]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)\n                }, k, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"5J/jBDPxOCuWDcqNaifzAwnDqoU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Contact;\n\nconst mapStateToProps = function (state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(Contact);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/I327713/Documents/React/Practice_Applications/ReactApps/src/components/Contact.js"],"names":["Card","FontAwesomeIcon","faCalendarAlt","faEnvelope","faMapMarkedAlt","faPhoneAlt","faSpaghettiMonsterFlying","faUnlockKeyhole","faUserAlt","useEffect","useSelector","useDispatch","connect","fetchUser","actions","USERTITLE","USERICON","KEYS","hovered","Contact","props","user","store","console","log","dispatch","onHover","hoveredItem","then","payload","type","FETCH_USERDATA","catch","e","imgUrl","visibility","title","info","map","k","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faEnvelope, faMapMarkedAlt, faPhoneAlt, faSpaghettiMonsterFlying, faUnlockKeyhole, faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { fetchUser } from '../services/UserServices';\nimport * as actions from '../state/ActionTypes'\n\nconst USERTITLE = { \"name\": \"Hi, My name is\", \"email\": \"My email address is\", \"DOB\": \"My birthday is\", \"address\": \"My address is\", \"phone\": \"My phone number is\", \"password\": \"My password is\" };\nconst USERICON  = { \"name\": faUserAlt, \"email\": faEnvelope, \"DOB\": faCalendarAlt, \"address\": faMapMarkedAlt, \"phone\": faPhoneAlt, \"password\": faUnlockKeyhole };\nconst KEYS = [\"name\", \"email\", \"DOB\", \"address\", \"phone\", \"password\"];\nconst hovered = false\nconst Contact = (props) => {\n\n const user = useSelector((store)=>store)\n console.log(\"user..\",user)\n const dispatch = useDispatch()\n\n  function onHover(hoveredItem) {\n    //  console.log(user);\n    // let UserInfo = \"\";\n    // setInfo(UserInfo);\n    // setTitle(USERTITLE[hoveredItem]);\n    // setHovered(hoveredItem);\n    \n  }\n\n\n  useEffect(() => {\n    console.log(\"use Effect\")\n    fetchUser().then( (payload) => dispatch({type:actions.FETCH_USERDATA, payload:payload}) )\n    .catch((e)=>console.log(\"Error in fetching user data\", e))\n    \n    console.log(\"use effect after dispatch\",user)\n\n\n\n  }, []);\n\n\n\n\n\n\n  return <>\n\n    <Card className=\"rel crd\">\n      <Card.Body>\n      <div className='pb-4' >\n          <img className=\"pic hcenter\" src={user.imgUrl} style={{ visibility: user.imgUrl ? \"visible\" : \"hidden\" }} />\n        </div>\n\n\n        <div className='mid'>\n          <div className='title'>{user.title}</div>\n          <div className='info'>{user.info}</div>\n\n        </div>\n        <div className='mid'>\n          <div >\n            <ul className='iconlist ' >\n\n              {\n                KEYS.map((k) => {\n\n                  return (\n                    <li key={k} className={ (k===\"email\"?\"d-none d-sm-block \":\"\") + 'm-1 m-sm-1 m-md-3  m-lg-4'}>\n                      <div className={hovered === k ? \"active ease\":\"ease\"} onMouseEnter={() => onHover(k)}>\n                        <FontAwesomeIcon className='icon mid ' icon={USERICON[k]} />\n                        <FontAwesomeIcon className='iconb mid ' icon={USERICON [k]} />\n                      </div>\n                    </li>\n                  );\n\n                })\n              }\n\n\n            </ul>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n\n  </>\n}\nconst mapStateToProps = function(state) {\n  return {\n    user : state.user\n  }\n}\n\nexport default connect(mapStateToProps)(Contact);"]},"metadata":{},"sourceType":"module"}