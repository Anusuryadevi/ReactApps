{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport hoverReducer from \"./reducer/HoverReducer\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = () => combineReducers({\n  user: hoverReducer\n});\n\nconsole.log(rootReducer); // const store = configureStore({reducer : rootReducer})\n// const store = createStore(rootReducer)\n// const store = createStore(rootReducer, applyMiddleware(thunk)\n// +window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() );\n// const store = createStore(rootReducer, {user: {}}, composeWithDevTools(\n//     applyMiddleware(thunk)))\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware()\n});\nexport default store;","map":{"version":3,"sources":["/Users/I327713/Documents/React/Practice_Applications/ReactApps/src/state/Store.js"],"names":["combineReducers","applyMiddleware","hoverReducer","configureStore","thunk","composeWithDevTools","rootReducer","user","console","log","store","reducer","middleware","getDefaultMiddleware"],"mappings":"AAAA,SAASA,eAAT,EAA2BC,eAA3B,QAAkD,OAAlD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,WAAW,GAAG,MAAQN,eAAe,CAAC;AACxCO,EAAAA,IAAI,EAAEL;AADkC,CAAD,CAA3C;;AAIAM,OAAO,CAACC,GAAR,CAAYH,WAAZ,E,CACA;AACA;AACA;AACA;AAGA;AACA;;AAEA,MAAMI,KAAK,GAAGP,cAAc,CAAC;AACzBQ,EAAAA,OAAO,EAAEL,WADgB;AAEzBM,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB;AAFjC,CAAD,CAA5B;AAMA,eAAeH,KAAf","sourcesContent":["import { combineReducers,  applyMiddleware } from \"redux\";\nimport hoverReducer from \"./reducer/HoverReducer\";\nimport { configureStore } from '@reduxjs/toolkit'; \nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = () => ( combineReducers({\n    user: hoverReducer,\n}));\n\nconsole.log(rootReducer);\n// const store = configureStore({reducer : rootReducer})\n// const store = createStore(rootReducer)\n// const store = createStore(rootReducer, applyMiddleware(thunk)\n// +window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() );\n\n\n// const store = createStore(rootReducer, {user: {}}, composeWithDevTools(\n//     applyMiddleware(thunk)))\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n  })\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}